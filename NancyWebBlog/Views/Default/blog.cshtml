@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase
@{
    Layout = "Views/Shared/_Layout.cshtml";
}

@using Cassette.Nancy
@{
    Bundles.Reference("Scripts/viewModel");
    Bundles.Reference("Scripts/sammy");
    Bundles.Reference("Scripts/knockout");
}
@{
    ViewBag.title = "Blog Post Template for Bootstrap 3";
}
@section Scripts{
    <script type="text/javascript">
        $(function () {
            var viewModel = new PreviewsViewModel();
            ko.applyBindings(viewModel);
        });

        function PreviewsViewModel() {
            var self = this;
            var blogpath = window.location.pathname;
            //general data
            self.isListVisible = ko.observable();
            self.posts = ko.observableArray();
            self.categories = ko.observableArray();

            //post data
            self.choosenPost = ko.observable();

            //user's event
            self.goToPost = function (post) {
                location.hash = "/" + post.id;
            }
            self.goToCategory = function (category) {
                location.hash = "/category/" + category.id;
            }

            Sammy(function () {
                this.get(blogpath, function () {
                    $.getJSON("post/all", function (response) {
                        var mapping = $.map(response, function (post) {
                            return new PreviewPostModel(post);
                        });
                        self.posts(mapping);
                        self.isListVisible(true);
                        self.choosenPost(null);
                    });
                });
                this.get(blogpath + '#/all', function () {
                    this.app.runRoute('get', blogpath);
                });
                this.get(blogpath + '#/:postId', function () {
                    $.getJSON("post/" + this.params.postId, function (data) {
                        self.isListVisible(false);
                        var model = new PostModel(data);
                        model.neighbors = { prev: self.posts()[0], next: self.posts()[self.posts().length - 1] };
                        self.choosenPost(model);
                    });
                });
                this.get(blogpath + '#/category/:categoryId', function () {
                    $.getJSON("post/category/" + this.params.categoryId, function (data) {
                        var mapping = $.map(data, function (post) {
                            return new PreviewPostModel(post);
                        });
                        self.posts(mapping)
                        self.choosenPost(null);
                        self.isListVisible(true);
                    });
                });
            }).run();

            $.getJSON("category/all", function (response) {
                var mapping = $.map(response, function (cat) {
                    return new CategoryModel(cat);
                });
                self.categories(mapping);
            });
        };
    </script>
}

<div class="col-lg-8">
    <!--START LIST MODE-->
    <div data-bind="foreach: posts, visible: isListVisible">
        <h1 class="cursor-hand" data-bind="text: title, click: $root.goToPost"></h1>
        <p class="lead">
            by <a data-bind="text: author" href="@ResolveUrl("~/about")">Author</a>
        </p>
        <hr>
        <p>
            <span class="glyphicon glyphicon-time"></span>&nbsp;Posted on&nbsp;<span data-bind="text: postedAt.toLocaleString()">
            </span>
        </p>
        <hr>
        <img src="http://placehold.it/900x300" class="img-responsive" alt="Post Logo">
        <hr>
        <p class="lead" data-bind="text: preBody">
        </p>
    </div>
    <!--END LIST MODE-->

    <!--START POST MODE-->
    <!-- ko with:choosenPost -->
    <div data-bind="template: { name: 'post-template', with: $data }">
    </div>
    <!--/ko-->
    <!--END POST MODE-->
</div>
<div class="col-lg-4">
    @Html.Partial("Views/Partials/Side/search")
    <!-- /well -->
    @Html.Partial("Views/Partials/Side/category")
    <!-- /well -->
    @Html.Partial("Views/Partials/Side/popular")
    <!-- /well -->
</div>
